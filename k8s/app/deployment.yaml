---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-test-backend-app
  namespace: k8s-hw
  labels:
    app: k8s-test-backend-app
    version: latest
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s-test-backend-app
  template:
    metadata:
      name: k8s-test-backend-app
      labels:
        app: k8s-test-backend-app
        version: latest
    spec:
      containers:
        - name: k8s-test-backend-app
          image: k8s-test-backend-app:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: k8s-test-backend-app-config-map
          env:
            - name: APP_SECRET_USERNAME
              valueFrom:
                secretKeyRef:
                  name: k8s-test-backend-app-secret
                  key: username
            - name: APP_SECRET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: k8s-test-backend-app-secret
                  key: password
            - name: APP_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: APP_POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-configmap
                  key: host
            - name: APP_POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: db-configmap
                  key: port
            - name: APP_POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: database
                  name: postgres-secrets
            - name: APP_POSTGRES_USER
              valueFrom:
                  secretKeyRef:
                      key: username
                      name: postgres-secrets
            - name: APP_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres-secrets
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: app-data
              mountPath: /var/lib/k8s-test-backend/data
      volumes:
        - name: app-data
          persistentVolumeClaim:
            claimName: k8s-test-backend-pvc
      restartPolicy: Always
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
---